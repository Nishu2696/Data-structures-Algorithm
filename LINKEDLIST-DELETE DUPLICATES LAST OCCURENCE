#include <iostream>
using namespace std;

struct Node{
    int data;
    Node *next;
    Node(int x){
        data = x;
        next = NULL;
    }
};

Node *insertAtEnd(Node *head, int data){
    if(head == NULL){
        return new Node(data);
    }
    Node *curr = head;
    while(curr->next != NULL){
        curr = curr->next;
    }
    curr->next = new Node(data);
    return head;
}

Node *deleteNode(Node *head, int delno){
    if(head == NULL){
        return head;
    }
    Node *curr = head;
    Node *temp = head;
    int count = 0, position = 0;
    while(temp != NULL){
        int data = temp->data;
        if(data == delno){
            count++;
        }
        temp = temp->next;
    }
    // cout<<count<<endl;
    int count1 = 0;
    while(curr != NULL){
        if(curr->next->data == delno){
            count1++;
        }
        if(count1 >= count){
            break;
        }
        curr = curr->next;
    }
    if((curr == NULL) || (curr->next == NULL)){
        return NULL;
    }
    Node *next = curr->next->next;
    free(curr->next);
    curr->next = next;
    return head;
}

void PrintList(Node *head){
    while(head != NULL){
        if(head->next == NULL){
            cout<<head->data;
        }
        else{
            cout<<head->data<<" ";
        }
        head = head->next;
    }
}


int main() {
    int size;
    cin>>size;
    int num1[size-1];
    Node *head1= NULL;
    for(int i=0; i<size; i++){
        cin>>num1[i];
        // cout<<num1[i]<<endl;
        head1= insertAtEnd(head1, num1[i]);
    }
    int del = 0;
    cin >> del;
    head1 = deleteNode(head1, del);
    PrintList(head1);
    return 0;
}
