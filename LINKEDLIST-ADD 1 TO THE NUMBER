#include <iostream>
using namespace std;

struct Node{
    int data;
    Node *next;
    Node(int x){
        data = x;
        next = NULL;
    }
};

Node *insertAtEnd(Node *head, int data){
    if(head == NULL){
        return new Node(data);
    }
    Node *curr = head;
    while(curr->next != NULL){
        curr = curr->next;
    }
    curr->next = new Node(data);
    return head;
}

Node *reverse(Node *head){
    if(head == NULL){
        return head;
    }
    Node *curr = head, *next = head;
    Node *prev = NULL;
    while(curr != NULL){
        next = curr->next;
        curr->next = prev;
        prev = curr;
        curr = next;
    }
    head = prev;
    int carry = 0, count =0, sum =0;
    Node *curr1 = head;
    while(curr1 != NULL){
        if(count == 0){
            // cout<<"curr-if"<<curr1->data<<endl;
            sum = curr1->data + 1;
            // cout<<"sum-if"<<sum<<endl;
            count++;
        }
        else{
            // cout<<"curr-else"<<curr1->data<<endl;
            sum = curr1->data + carry;
            // cout<<"sum-else"<<sum<<endl;
        }
        if(sum >= 10){
            carry = sum/10;
            sum = sum%10;
        }
        curr1->data = sum;
        curr1 = curr1->next;
    }
    curr = head;
    next = head;
    prev = NULL;
    while(curr != NULL){
        next = curr->next;
        curr->next = prev;
        prev = curr;
        curr = next;
    }
    head = prev;
    return head;
}

void PrintList(Node *head){
    while(head != NULL){
        if(head->next == NULL){
            cout<<head->data;
        }
        else{
            cout<<head->data<<" ";
        }
        head = head->next;
    }
}


int main() {
    int size;
    cin>>size;
    int num1[size-1];
    Node *head1= NULL;
    for(int i=0; i<size; i++){
        cin>>num1[i];
        // cout<<num1[i]<<endl;
        head1= insertAtEnd(head1, num1[i]);
    }
    head1 = reverse(head1);
    PrintList(head1);
    return 0;
}
